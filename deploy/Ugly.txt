<!DOCTYPE html>
<html>
<head>
    <title>Backlog Ready Depth</title>
    <!--  (c) 2017 CA Technologies.  All Rights Reserved. -->
    <!--  Build Date: Wed Jun 07 2017 22:04:13 GMT-0600 (MDT) -->
    
    <script type="text/javascript">
        var APP_BUILD_DATE = "Wed Jun 07 2017 22:04:13 GMT-0600 (MDT)";
        var STORY    = "F219";
        var BUILDER  = "corkr03";
        var CHECKSUM = 25916992513;
    </script>
    
    <script type="text/javascript" src="/apps/2.1/sdk.js"></script>
    <!-- our highcharts (needed so that we can add patterns) 
    <script type="text/javascript" src="/apps/2.1/lib/analytics/analytics-all.js"></script>
    -->
    
    
    <script type="text/javascript">
        Rally.onReady(function() {
            Ext.define("Rally.technicalservices.InfoLink",{extend:"Rally.ui.dialog.Dialog",alias:"widget.tsinfolink",informationHtml:null,title:"Build Information",defaults:{padding:5,margin:5},closable:!0,draggable:!0,autoShow:!0,width:350,informationalConfig:null,items:[{xtype:"container",itemId:"information"}],initComponent:function(){Ext.id(this);this.title="<span class='icon-help'> </span>"+this.title,this.callParent(arguments)},_generateChecksum:function(a){var b,c=305419896;for(a=a.replace(/var CHECKSUM = .*;/,""),a=a.replace(/var BUILDER  = .*;/,""),a=a.replace(/\s/g,""),b=0;b<a.length;b++)c+=a.charCodeAt(b)*b;return c},_checkChecksum:function(a){var b=Ext.create("Deft.Deferred"),c=this;return Ext.Ajax.request({url:document.URL,params:{id:1},success:function(a){if(text=a.responseText,CHECKSUM){var d=c._generateChecksum(text);if(CHECKSUM!==d)return void b.resolve(!1)}b.resolve(!0)}}),b.promise},_addToContainer:function(a){var b=Ext.apply({xtype:"container",height:200,overflowY:!0},this.informationalConfig);a.add(b)},afterRender:function(){var a=Rally.getApp();if(!Ext.isEmpty(this.informationalConfig)){var b=this.down("#information");this._addToContainer(b)}a.isExternal()?this.addDocked({xtype:"container",cls:"build-info",padding:2,dock:"bottom",html:"... Running externally"}):this._checkChecksum(a).then({scope:this,success:function(a){a||this.addDocked({xtype:"container",cls:"build-info",dock:"bottom",padding:2,html:'<span class="icon-warning"> </span>Checksums do not match'})},failure:function(a){console.log("oops:",a)}}),this.callParent(arguments)},beforeRender:function(){if(this.callParent(arguments),this.informationHtml&&this.addDocked({xtype:"component",componentCls:"intro-panel",padding:2,html:this.informationHtml,doc:"top"}),this.addDocked({xtype:"container",cls:"build-info",padding:2,dock:"bottom",html:"This app was created by the CA AC Technical Services Team."}),APP_BUILD_DATE){var a=Ext.String.format("Built on: {0} <br/>Built by: {1}",APP_BUILD_DATE,BUILDER);STORY&&(a=a+"<br/>Source story: "+STORY),this.addDocked({xtype:"container",cls:"build-info",padding:2,dock:"bottom",html:a})}}}),Ext.define("Rally.technicalservices.Logger",{constructor:function(a){Ext.apply(this,a)},log:function(a){var b="[ "+Ext.util.Format.date(new Date,"Y-m-d H:i:s.u")+" ]",c=[];c=Ext.Array.push(c,[b]),c=Ext.Array.push(c,Ext.Array.slice(arguments,0)),window.console&&console.log.apply(console,c)}}),Ext.define("RallyTechServices.backlogreadydepth.utils.IterationData",{StartDate:null,EndDate:null,Name:null,_iterations:null,_futureIterations:null,_projectVelocity:null,_snaps:null,_projectTotalPlanEstimates:null,_logger:null,constructor:function(a){a.iterationData&&(this.StartDate=a.iterationData.StartDate,this.EndDate=a.iterationData.EndDate,this.Name=a.iterationData.Name),this._logger=a.logger},addIteration:function(a){this._iterations||(this._iterations=[]),this._iterations.push(a)},addSnaps:function(a){this._snaps={};for(var b={},c=0;c<a.length;c++){var d=a[c].getData(),e=d.Project;console.log("snap",d.FormattedID,d),!d.Iteration||this._isFutureIteration(d.Iteration)?(b[e]||(b[e]=0),b[e]+=d.PlanEstimate||0,this._snaps[e]||(this._snaps[e]=[]),this._snaps[e].push(d)):console.log("snap not used",d.FormattedID,d,d.Iteration)}this._projectTotalPlanEstimates=b,this._logger.log("addSnaps",this.Name,this._snaps,this._projectTotalPlanEstimates)},getFutureIterations:function(){return this._futureIterations||[]},_isFutureIteration:function(a){return this.getFutureIterations().indexOf(a)>=0},processIterations:function(a){for(var b=[],c=this.Name,d=a.length-1;d>=0;d--)a[d].get("StartDate")>this.EndDate?b.push(a[d].get("ObjectID")):a[d].get("Name")===c&&this.addIteration(a[d].getData());this._futureIterations=b,this._logger.log("processIterations",this.Name,this._iterations,this._futureIterations)},calculateVelocity:function(a){var b={},c=this.Name;Ext.Array.each(a,function(a){var d=a.get("Iteration"),e=a.get("Project").ObjectID;d._refObjectName===c&&(b[e]||(b[e]=0),b[e]+=a.get("PlanEstimate")||0)},this),this._projectVelocity=b,this._logger.log("calculateVelocity",this.Name,this._projectVelocity)},getVelocity:function(a){return this._projectVelocity&&this._projectVelocity[a]||0},getTotalPlanEstimate:function(a){return this._projectTotalPlanEstimates&&this._projectTotalPlanEstimates[a]||0},getSnapsForProject:function(a){return this._snaps&&this._snaps[a]||[]}}),Ext.define("RallyTechServices.backlogreadydepth.utils.BacklogDepthCalculator",{constructor:function(a){this.iterationData=a.iterationData,this.numSprintsForAverageVelocity=a.numSprintsForAverageVelocity,this.projects=a.projects},getChartData:function(){for(var a=[],b=this.numSprintsForAverageVelocity;b<this.iterationData.length;b++)a.push({name:this.iterationData[b].Name,data:this._getBacklogDepthData(b)});return{series:a,categories:this.getCategories()}},_getBacklogDepthData:function(a){var b=[];return Ext.Array.each(this.projects,function(c){var d=this._calculateBacklogDepth(c,a);b.push(d)},this),b},_calculateBacklogDepth:function(a,b){for(var c=a.get("ObjectID"),d=this.iterationData[b],e=[],f=1;f<=this.numSprintsForAverageVelocity;f++){var g=b-f;e.push(this.iterationData[g].getVelocity(c))}var h=Ext.Array.mean(e),i=d.getTotalPlanEstimate(c);if(h>0){var j=Math.round(i/h*100);return j/100}return 0},getCategories:function(){return Ext.Array.map(this.projects,function(a){return a.get("Name")})},getPlotBands:function(a){return[{from:a.outerThresholdStart,to:a.innerThresholdStart,color:a.outerColor},{from:a.innerThresholdStart,to:a.innerThresholdEnd,color:a.innerColor},{from:a.innerThresholdEnd,to:a.outerThresholdEnd,color:a.outerColor}]},getSummaryExportCSV:function(){for(var a=["Team"],b=[],c=this.numSprintsForAverageVelocity;c<this.iterationData.length;c++)a.push(this.iterationData[c].Name);b.push(a.join(","));for(var d=0;d<this.projects.length;d++){for(var e=[this.projects[d].get("Name")],c=this.numSprintsForAverageVelocity;c<this.iterationData.length;c++)e.push(this._calculateBacklogDepth(this.projects[d],c));b.push(e.join(","))}return b.join("\r\n")},getVelocityExportCSV:function(){for(var a=["Team"],b=[],c=0;c<this.iterationData.length;c++)a.push(this.iterationData[c].Name);b.push(a.join(","));for(var d=0;d<this.projects.length;d++){for(var e=[this.projects[d].get("Name")],c=0;c<this.iterationData.length;c++)e.push(this.iterationData[c].getVelocity(this.projects[d].get("ObjectID")));b.push(e.join(","))}return b.join("\r\n")},getDetailedExportCSV:function(){var a=["Team","Iteration Name","FormattedID","PlanEstimate"],b=[];b.push(a.join(","));for(var c=0;c<this.projects.length;c++)for(var d=this.projects[c].get("Name"),e=this.projects[c].get("ObjectID"),f=this.numSprintsForAverageVelocity;f<this.iterationData.length;f++)for(var g=this.iterationData[f].Name,h=this.iterationData[f].getSnapsForProject(e),i=0;i<h.length;i++){var j=[d,g,h[i].FormattedID,h[i].PlanEstimate];b.push(j.join(","))}return b.join("\r\n")}}),Ext.define("RallyTechServices.ui.combobox.BooleanFieldComboBox",{requires:[],extend:"Rally.ui.combobox.FieldComboBox",alias:"widget.booleanfieldcombobox",_isNotHidden:function(a){return!a.readOnly&&a.attributeDefinition&&"BOOLEAN"===a.attributeDefinition.AttributeType}}),Ext.define("RallyTechServices.ui.combobox.DropdownFieldComboBox",{requires:[],extend:"Rally.ui.combobox.FieldComboBox",alias:"widget.dropdownfieldcombobox",_isNotHidden:function(a){return!a.readOnly&&a.attributeDefinition&&a.attributeDefinition.Constrained&&"STRING"===a.attributeDefinition.AttributeType}}),Ext.define("RallyTechServices.ui.combobox.DynamicFieldValueCombobox",{extend:"Rally.ui.combobox.FieldValueComboBox",alias:"widget.dynamicfieldvaluecombobox",_populateStore:function(){return this.field&&""!==this.field.length&&"_type"!==this.field.name?(this.setDisabled(!1),this.store.on("load",function(){this.fireEvent("ready",this)},this),void this._loadStoreValues()):(this.setDisabled(!0),void this.onReady())},refreshWithNewField:function(a){this.field=this.model.getField(a),this._populateStore()}}),Ext.define("RallyTechServices.backlogreadydepth.utils.Toolbox",{singleton:!0,fetchWsapiRecords:function(a,b){var c=Ext.create("Deft.Deferred");return b||(b="Rally.data.wsapi.Store"),a.limit||(a.limit="Infinity"),a.pageSize||(a.pageSize=2e3),Ext.create(b,a).load({callback:function(a,b){b.wasSuccessful()?c.resolve(a):c.reject("Error fetching from store for: "+b.error.errors.join(","))}}),c.promise},fetchWsapiArtifactRecords:function(a){return RallyTechServices.backlogreadydepth.utils.Toolbox.fetchWsapiRecords(a,"Rally.data.wsapi.artifact.Store")},fetchLookbackSnapshots:function(a){var b=Ext.create("Deft.Deferred");return a.removeUnauthorizedSnapshots=!0,a.limit="Infinity",Ext.create("Rally.data.lookback.SnapshotStore",a).load({callback:function(a,c){c.wasSuccessful()?b.resolve(a):b.reject("Error loading snapshots: "+c.error.errors.join(","))}}),b},getHighchartsColorWithOpacity:function(a,b){var c=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(a);return c?Ext.String.format("rgba({0},{1},{2},{3})",parseInt(c[1],16),parseInt(c[2],16),parseInt(c[3],16),b):null},saveCSVToFile:function(a,b,c){void 0===c&&(c={type:"text/csv;charset=utf-8"}),this.saveAs(a,b,c)},saveAs:function(a,b){if(Ext.isIE9m)return void Rally.ui.notify.Notifier.showWarning({message:"Export is not supported for IE9 and below."});var c=null;try{c=new Blob([a],{type:"text/plain"})}catch(d){window.BlobBuilder=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,window.BlobBuilder&&"TypeError"==d.name&&(bb=new BlobBuilder,bb.append([a]),c=bb.getBlob("text/plain"))}if(!c)return void Rally.ui.notify.Notifier.showWarning({message:"Export is not supported for this browser."});var e=b;if(Ext.isIE10p)return void window.navigator.msSaveOrOpenBlob(c,e);var f=this.createObjectURL(c);if(f){var g=document.createElement("a");"download"in g?g.download=e:g.target="_blank",g.innerHTML="Download File",g.href=f,Ext.isChrome||(g.onclick=this.destroyClickedElement,g.style.display="none",document.body.appendChild(g)),g.click()}else Rally.ui.notify.Notifier.showError({message:"Export is not supported "})},createObjectURL:function(a){return window.webkitURL?window.webkitURL.createObjectURL(a):window.URL&&window.URL.createObjectURL?window.URL.createObjectURL(a):null},destroyClickedElement:function(a){document.body.removeChild(a.target)}}),Ext.define("backlog-ready-depth",{extend:"Rally.app.App",componentCls:"app",logger:new Rally.technicalservices.Logger,defaults:{margin:10},items:[{xtype:"container",itemId:"export_box",layout:"hbox"},{xtype:"container",itemId:"grid_box"}],integrationHeaders:{name:"backlog-ready-depth"},config:{defaultSettings:{numSprintsForAverageVelocity:3,numSprintsToTrend:2,innerThreshold:[1,2],outerThreshold:[.5,3],innerColor:"#e3f9e9",outerColor:"#FDFECC",outsideColor:"#F2D3D0",query:"",relativeProjectDepth:1,includeDefects:!0,maxSprintsOnGraph:0,filterField:null,filterValues:null,excludeProjectField:null,offsetHours:0}},chartColors:[Rally.util.Colors.cyan,Rally.util.Colors.brick,Rally.util.Colors.orange,Rally.util.Colors.purple,Rally.util.Colors.green,Rally.util.Colors.lime,Rally.util.Colors.red_med,Rally.util.Colors.pink_med],lookbackBacklogFilter:{ScheduleState:"Defined",Ready:!0,Blocked:!1},lookbackBacklogFetch:["Project","Iteration","ObjectID","_ProjectHierarchy","PlanEstimate","FormattedID"],velocityFetch:["Project","ObjectID","Iteration","PlanEstimate"],launch:function(){this.logger.log("launch",this.getSettings()),this.updateView()},updateView:function(){this.setLoading(!0),this.fetchIterationInfo().then({success:this.fetchAllIterations,failure:this.showErrorNotification,scope:this}).then({success:this.fetchProjectBuckets,failure:this.showErrorNotification,scope:this}).then({success:this.fetchWorkItemData,failure:this.showErrorNotification,scope:this}).then({success:this.buildChart,failure:this.showErrorNotification,scope:this}).always(function(){this.setLoading(!1)},this)},fetchWorkItemData:function(a){this.projects=a,this.logger.log("fetchWorkItemData",a,this.iterationData);for(var b=[],c=this.getNumSprintsForAverageVelocity();c<this.iterationData.length;c++)b.push(this.fetchIterationBoundarySnapshots(this.iterationData[c]));return b.push(this.fetchCurrentVelocityData()),Deft.Promise.all(b)},getOffsetHours:function(){return this.getSetting("offsetHours")||0},fetchIterationBoundarySnapshots:function(a){var b=this.getOffsetHours(),c=Rally.util.DateTime.add(a.StartDate,"hour",b),d=Ext.clone(this.lookbackBacklogFilter),e=this.getFilterField(),f=this.getFilterFieldValues();return this.logger.log("fetchIterationBoundarySnapshots: filterField",e,f),e&&f&&(d[e]={$in:f}),d.__At=Rally.util.DateTime.toIsoString(c),d._ProjectHierarchy=this.getContext().getProject().ObjectID,this.logger.log("fetchIterationBoundarySnapshots",d,a),RallyTechServices.backlogreadydepth.utils.Toolbox.fetchLookbackSnapshots({findConfig:d,fetch:this.lookbackBacklogFetch})},fetchCurrentVelocityData:function(){return RallyTechServices.backlogreadydepth.utils.Toolbox.fetchWsapiArtifactRecords({models:this.getWorkItemTypes(),fetch:this.velocityFetch,filters:this.getVelocityFilters()})},getVelocityFilters:function(){return[{property:"Iteration.StartDate",operator:">=",value:Rally.util.DateTime.toIsoString(this.iterationData[0].StartDate)},{property:"Iteration.EndDate",operator:"<=",value:Rally.util.DateTime.toIsoString(new Date)},{property:"ScheduleState",operator:">=",value:"Accepted"}]},fetchProjectBuckets:function(a){this.logger.log("fetchProjectBuckets",a),this.addIterationsToIterationData(a);for(var b="ObjectID",c=this.getContext().getProject().ObjectID,d=[{property:"ObjectID",value:c}],e=2;9>e;e++)b="Parent."+b,d.push({property:b,value:c});return d=Rally.data.wsapi.Filter.or(d),d=d.and({property:"State",value:"Open"}),d=d.and({property:"Children.State",operator:"!=",value:"Open"}),this.getProjectExcludeField()&&(d=d.and({property:this.getProjectExcludeField(),operator:"!=",value:!0})),RallyTechServices.backlogreadydepth.utils.Toolbox.fetchWsapiRecords({model:"Project",fetch:["Name","ObjectID","Parent"],filters:d,sorters:[{property:"Name",direction:"ASC"}]})},fetchIterationInfo:function(){return this.logger.log("fetchIterationInfo",Rally.util.DateTime.toUtcIsoString(new Date)),RallyTechServices.backlogreadydepth.utils.Toolbox.fetchWsapiRecords({model:"Iteration",fetch:["Name","StartDate","EndDate"],pageSize:this.getNumSprintsToTrend()+this.getNumSprintsForAverageVelocity(),limit:this.getNumSprintsToTrend()+this.getNumSprintsForAverageVelocity(),context:{project:this.getContext().getProject()._ref,projectScopeDown:!1,projectScopeUp:!1},filters:[{property:"StartDate",operator:"<=",value:Rally.util.DateTime.toUtcIsoString(new Date)}],sorters:[{property:"StartDate",direction:"DESC"}]})},fetchAllIterations:function(a){if(!a||0==a.length)return this.addAppMessage("No iterations defined for the currently scoped project."),null;var b=[];Ext.Array.each(a,function(a){var c=Ext.create("RallyTechServices.backlogreadydepth.utils.IterationData",{iterationData:a.getData(),logger:this.logger});b.push(c)},this,!0),this.iterationData=b;var c=b[0].StartDate;return this.logger.log("fetchAllIterations",b,c),RallyTechServices.backlogreadydepth.utils.Toolbox.fetchWsapiRecords({model:"Iteration",fetch:["Name","StartDate","EndDate","Project","ObjectID"],filters:[{property:"StartDate",operator:">=",value:c}],sorters:[{property:"StartDate",direction:"DESC"}]})},addIterationsToIterationData:function(a){this.logger.log("addIterationsToIterationData iterations found:",a.length);for(var b=0;b<this.iterationData.length;b++)this.iterationData[b].processIterations(a);this.logger.log("addIterationsToIterationData",this.iterationData)},addAppMessage:function(a){this.add({xtype:"container",html:a})},getMaxSprintsOnGraph:function(){var a=this.getSetting("maxSprintsOnGraph");return!a||1>a?void 0:a},exportData:function(a,b){this.logger.log("export",b);var c=Ext.widget({xtype:"rallymenu",items:[{text:"Export Backlog Depth Summary...",handler:function(){var a=b.getSummaryExportCSV(),c=Ext.String.format("summary-{0}.csv",Rally.util.DateTime.format(new Date,"Y-m-d-h-i-s"));RallyTechServices.backlogreadydepth.utils.Toolbox.saveCSVToFile(a,c)},scope:this},{text:"Export Velocity Summary...",handler:function(){var a=b.getVelocityExportCSV(),c=Ext.String.format("velocity-{0}.csv",Rally.util.DateTime.format(new Date,"Y-m-d-h-i-s"));RallyTechServices.backlogreadydepth.utils.Toolbox.saveCSVToFile(a,c)},scope:this},{text:"Export Backlog Details...",handler:function(){var a=b.getDetailedExportCSV(),c=Ext.String.format("details-{0}.csv",Rally.util.DateTime.format(new Date,"Y-m-d-h-i-s"));RallyTechServices.backlogreadydepth.utils.Toolbox.saveCSVToFile(a,c)},scope:this}]});c.showBy(a.getEl())},buildChart:function(a){if(this.logger.log("processData",a),a){this.down("#export_box").add({xtype:"container",flex:1});for(var b=a.slice(-1)[0],c=this.getNumSprintsForAverageVelocity(),d=0;d<this.iterationData.length;d++)this.iterationData[d].calculateVelocity(b),d>=c&&this.iterationData[d].addSnaps(a[d-c]);var e=Ext.create("RallyTechServices.backlogreadydepth.utils.BacklogDepthCalculator",{iterationData:this.iterationData,projects:this.projects,numSprintsForAverageVelocity:c}),f=this.down("#export_box").add({xtype:"rallybutton",iconCls:"icon-export",cls:"secondary rly-small"});f.on("click",function(){this.exportData(f,e)},this);var g=this.getMaxSprintsOnGraph(),h=this.getHeight(),i=this.down("#export_box").getHeight(),j=Math.max(h-i,100),k=.8*j;this.logger.log("buildChart heights",h,i,j),this.down("#grid_box").add({xtype:"rallychart",chartColors:this.chartColors,height:k,chartConfig:{chart:{events:{load:function(){var a=this;a&&Ext.Array.each(a.series,function(b){for(var c=0;c<b.yData.length;c++)b.yData[c]>g&&a.renderer.label('<div class="icon-warning"></div>'+b.yData[c],a.plotSizeY+a.plotLeft-50,b.data[c].plotX+a.plotTop+15,void 0,void 0,void 0,!0).css({fontSize:"12px",fontFamily:"ProximaNova",backgroundColor:"#444",color:"#444"}).add()})}},type:"bar",plotBackgroundColor:this.getSetting("outsideColor"),zoomType:"y"},title:{text:'"Ready" Backlog Depth',style:{color:"#666",fontSize:"18px",fontFamily:"ProximaNova",textTransform:"uppercase",fill:"#666"}},subtitle:{text:null},xAxis:{title:{text:null,style:{color:"#444",fontFamily:"ProximaNova",textTransform:"uppercase",fill:"#444"}},labels:{style:{color:"#444",fontFamily:"ProximaNova",fill:"#444"}}},yAxis:{min:0,max:g,title:{text:"Number of Sprints",style:{color:"#444",fontFamily:"ProximaNova",textTransform:"uppercase",fill:"#444"}},labels:{overflow:"justify",style:{color:"#444",fontFamily:"ProximaNova",fill:"#444"}},plotBands:e.getPlotBands(this.getSettings())},tooltip:{valueSuffix:" sprints",backgroundColor:"#444",useHTML:!0,borderColor:"#444",style:{color:"#FFF",fontFamily:"ProximaNova",fill:"#444"}},plotOptions:{bar:{dataLabels:{enabled:!0,formatter:function(){return this.y>=g?"<b>"+this.series.name+'</b><br/><div class="icon-warning" style="color: #fad200;"></div>'+this.y+" Sprints":null},x:-20,useHTML:!0,style:{color:"#444",fontFamily:"ProximaNova",fill:"#444"}},borderWidth:0}},legend:{itemStyle:{color:"#444",fontFamily:"ProximaNova",textTransform:"uppercase"},borderWidth:0}},chartData:e.getChartData()})}},getNumSprintsForAverageVelocity:function(){return this.getSetting("numSprintsForAverageVelocity")||3},getNumSprintsToTrend:function(){return this.getSetting("numSprintsToTrend")||2},getWorkItemTypes:function(){var a=["HierarchicalRequirement"];return this.getSetting("includeDefects")&&a.push("Defect"),a},getRelativeProjectDepth:function(){return this.getSetting("relativeProjectDepth")||2},getProjectExcludeField:function(){return this.getSetting("excludeProjectField")||null},getFilterField:function(){return this.getSetting("filterField")||null},getFilterFieldValues:function(){var a=this.getSetting("filterFieldValues")||null;return Ext.isArray(a)&&a.length>0?a:Ext.isString(a)&&a.length>0?a.split(","):null},showErrorNotification:function(a){this.logger.log("showErrorNotification",a),Rally.ui.notify.Notifier.showError({message:a})},getSettingsFields:function(){var a={labelAlign:"right",labelWidth:250},b=this.getFilterFieldValues();this.logger.log("getSettingsFields",b);var c=Ext.Object.merge({xtype:"rallynumberfield",fieldLabel:"# Sprints to Trend",name:"numSprintsToTrend",maxValue:6,minValue:1},a),d=Ext.Object.merge({xtype:"rallycheckboxfield",fieldLabel:"Include Defects",name:"includeDefects"},a),e=Ext.Object.merge({xtype:"booleanfieldcombobox",fieldLabel:"Exclude Project Field",name:"excludeProjectField",allowNoEntry:!0,model:"Project"},a),f=Ext.Object.merge({xtype:"dropdownfieldcombobox",fieldLabel:"Filter Field",name:"filterField",allowNoEntry:!0,model:"HierarchicalRequirement",bubbleEvents:["select"]},a),g=Ext.Object.merge({xtype:"dynamicfieldvaluecombobox",fieldLabel:"Filter Field Values",name:"filterFieldValues",allowNoEntry:!1,model:"HierarchicalRequirement",field:this.getFilterField(),multiSelect:!0,handlesEvents:{select:function(a){a.getValue()&&this.refreshWithNewField(a.getValue())}},listeners:{ready:function(){b&&this.setValue(b)}}},a),h=Ext.Object.merge({xtype:"rallynumberfield",fieldLabel:"Max # Sprints Visible (0 for no limit)",name:"maxSprintsOnGraph",minValue:0},a),i=Ext.Object.merge({xtype:"rallynumberfield",name:"outerThresholdStart",fieldLabel:"Outer Threshold Start",minValue:0,handlesEvents:{change:function(a){"innerThresholdStart"===a.name&&(this.maxValue=a.value,this.validate())}}},a),j=Ext.Object.merge({xtype:"rallynumberfield",name:"innerThresholdStart",fieldLabel:"Inner Threshold Start",minValue:0,bubbleEvents:["change"],handlesEvents:{change:function(a){"innerThresholdEnd"===a.name&&(this.maxValue=a.value,this.validate())}}},a),k=Ext.Object.merge({xtype:"rallynumberfield",name:"outerThresholdEnd",fieldLabel:"Outer Threshold End",minValue:0,handlesEvents:{change:function(a){"innerThresholdEnd"===a.name&&(this.minValue=a.value,this.validate())}}},a),l=Ext.Object.merge({xtype:"rallynumberfield",name:"innerThresholdEnd",fieldLabel:"Inner Threshold End",minValue:0,bubbleEvents:["change"],handlesEvents:{change:function(a){"innerThresholdStart"===a.name&&(this.minValue=a.value,this.validate())}}},a),m=Ext.Object.merge({xtype:"rallynumberfield",name:"offsetHours",fieldLabel:"Offset Hours",minValue:-24,maxValue:24},a);return[c,d,e,f,g,h,j,l,i,k,m]},getOptions:function(){return[{text:"About...",handler:this._launchInfo,scope:this}]},_launchInfo:function(){this.about_dialog&&this.about_dialog.destroy(),this.about_dialog=Ext.create("Rally.technicalservices.InfoLink",{})},isExternal:function(){return"undefined"==typeof this.getAppId()}});
            
               Rally.launchApp('backlog-ready-depth', {
                   name: 'Backlog Ready Depth'
               });
        });
    </script>
    
    <style type="text/css">

.app {
}
.tsinfolink {
    position:absolute;
    right:0px;
    width: 14px;
    height: 14px;
    border-radius: 7px;
    text-align: center;
    color: white;
    background: #C0C0C0;
    border-style: solid;
    border-width: 1px;
    margin-top: 25px;
    margin-right: 5px;
    cursor: pointer;
}
    </style>

</head>
<body></body>
</html>